plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'checkstyle'
}

group = 'com.team01'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.mysql:mysql-connector-j'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.h2database:h2'
	testRuntimeOnly 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
<<<<<<< HEAD
	//OAuth, security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.security:spring-security-oauth2-client'
	//jwt
	implementation 'io.jsonwebtoken:jjwt:0.12.6'

	//mokito test
	testImplementation 'org.mockito:mockito-core:5.2.0'
=======
	implementation 'org.springframework.boot:spring-boot-starter-webflux'	// WebClient 사용
>>>>>>> main
}

tasks.named('test') {
	useJUnitPlatform()
}

//checkStyle
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

tasks.withType(Checkstyle) {
	reports {
		xml.required = true
		html.required = true
	}
}

checkstyle {
	maxWarnings = 0
	configFile = file("checkstyle/naver-checkstyle-rules.xml")
	configProperties = ["suppressionFile": "checkstyle/naver-checkstyle-suppressions.xml"]
}